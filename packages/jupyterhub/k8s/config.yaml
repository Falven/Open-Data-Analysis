# This file can update the JupyterHub Helm chart's default configuration values.
#
# For reference see the configuration reference and default values, but make
# sure to refer to the Helm chart version of interest to you!
#
# Introduction to YAML:     https://www.youtube.com/watch?v=cdLNKUoMc6c
# Chart config reference:   https://zero-to-jupyterhub.readthedocs.io/en/stable/resources/reference.html
# Chart default values:     https://github.com/jupyterhub/zero-to-jupyterhub-k8s/blob/HEAD/jupyterhub/values.yaml
# Available chart versions: https://hub.jupyter.org/helm-chart/
#
hub:
  # User our custom jupyterhub image with our custom spawner.
  image:
    pullPolicy: Always
    name: <my-acr-name>.azurecr.io/k8s-hub
    tag: 3.2.1
  extraConfig:
    # Custom spawner to create a dynamically generated PVCs for Azure Blob Storage data mounts.
    customSpawner: |
      from dynamic_spawner import DynamicSpawner
      c.JupyterHub.spawner_class = DynamicSpawner
      c.Spawner.additional_pvcs = [{
        "metadata": {
          "name": "claim-nfs-{username}",
        },
        "spec": {
          "access_modes": ["ReadWriteOnce"],
          "resources": {
            "requests": {
              "storage": "3Gi", # How much storage to request from the volume per user.
            },
          },
          "storage_class_name": "azure-blob-nfs-sc",
        },
      }]
  services:
    # Configure the Admin API service.
    myapi:
      name: 'myapi'
      api_token: <token> # Generate an API token and enter here for authentication.
    # Configure a service to cull idle single-user servers after 1 hour of inactivity.
    jupyterhub-idle-culler-service:
      name: jupyterhub-idle-culler-service
      command:
        - 'python3'
        - '-m'
        - 'jupyterhub_idle_culler'
        - '--timeout=3600' # Time out inactive servers after 1 hour.
        - '--cull-users'
        - '--api-page-size=200'
  loadRoles:
    # Role for the idle-culler.
    jupyterhub-idle-culler-role:
      description: 'Cull idle single-user servers'
      scopes:
        - 'list:users'
        - 'read:users:activity'
        - 'read:servers'
        - 'delete:servers'
        - 'admin:users'
      services: ['jupyterhub-idle-culler-service']
    # Role for the Admin. API.
    user-admin-role:
      description: 'Role to manage users and their servers'
      scopes:
        - 'admin:users' # Read, write, create and delete users and their authentication state, not including their servers or tokens.
        - 'tokens' # Read, write, create and delete user tokens.
        - 'admin:servers' # Read, start, stop, create and delete user servers and their state.
        - 'access:servers' # Access user servers via API or browser.
      services: ['myapi']
# Secret to pull images from the Azure Container Registry.
imagePullSecrets:
  - name: <your-secret-name>
singleuser:
  image:
    pullPolicy: Always
    name: <my-acr-name>.azurecr.io/singleuser
    tag: latest
  memory:
    limit: 3G
    guarantee: 2G
  storage:
    capacity: 3Gi # Primary storage for the user's home directory
    extraVolumes:
      - name: data
        persistentVolumeClaim:
          claimName: claim-nfs-{username}
    extraVolumeMounts:
      - name: data
        mountPath: /mnt/data
        subPath: '{username}/conversations/{conversation_id}'
  initContainers:
    # Init container to set up the NFS mount permissions
    - name: init-nfs
      image: <my-acr-name>.azurecr.io/init-nfs:1.36.1
      imagePullPolicy: Always
      securityContext:
        runAsUser: 0 # Run as root user
      volumeMounts:
        - name: data
          mountPath: /mnt/data
          subPath: '{username}/conversations/{conversation_id}'
      env:
        - name: MOUNT_PATH
          value: '/mnt/data'
        - name: MOUNT_OWNER
          value: '1000:100'
        - name: MOUNT_MODE
          value: '2770'
